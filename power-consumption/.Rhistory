dev.off()
swirl()
head9cars
head(cars)
with(cars, plot(speed, dist()))
with(cars, plot(speed, dist)
)
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(states)
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", title = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main ="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month == 5)
point(may$Wind, may$Ozone, col = "blue", pch = 24)
points(may$Wind, may$Ozone, col = "blue", pch = 24)
points(may$Wind, may$Ozone, col = "blue", pch = 17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col = "red", pch = 8)
legent("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
legend("topright", pch=c(17,8), col=c("blue", "red"), legend=c("May", "Other Months"))
abline(v = median(airquality$Wind), lty=2, lwd=2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar(4,4,2,1), oma = c(0,0,2,0))
par(mfrow = c(1,3), mar = (4,4,2,1), oma = c(0,0,2,0))
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City")
mtext("Ozone and Weather in New York City", outer = TRUE)
rm(ls= list())
rm(list = ls())
getwd()
setwd("/home/callen/Documents/JHU-data-science-assignments/power-consumption")
getwd()
dir()
?fread
?read_file
?read.csv
power <- read.csv("household_power_comsumption.txt", sep = ";")
power <- read.csv("household_power_consumption.txt", sep = ";")
head(power)
class(power$Date)
as.Date(power$Date[1])
power_sub <- power[as.Date(power$Date) == "01-02-2007", as.Date(power$Date) == "02-02-2007"]
power_sub <- power[as.Date(power$Date) == "01-02-2007"]
length(power$Date)
length(power$Date == "01/02/2007")
sum(as.Date(power$Date == "01-02-2007"))
sum(as.Date(power$Date) == "01-02-2007")
library(RSQLite)
con <- dbConnect("SQLite", dbname = "power_db.sqlite")
library(data.table)
rm(power)
?fread
dt <- fread("household_power_consumption.txt", sep = ";")
head(dt)
sub <- subset.data.table(dt, dt$Date == "01/02/2007")
sub <- dt[dt$Date == "01/02/2007"]
length(dt$Date)
class(dt$Date)
length(dt$Date == "01/02/2007")
dt$Date[1]
dt$Date[2]
dt$Date[2] == "16/12/2006"
dt$Date[2] == "01/02/2007"
as.Date(dt$Date[2])
class(as.Date(dt$Date[2]))
dt$Date = as.Date(dt$Date)
class(dt$Date)
sub <- dt[Date == "01-02-2007"]
head(sub)
sub$Date[1]
dt <- fread("household_power_consumption.txt", sep = ";")
head(dt)
sub <- dt[Date == "01/02/2007"]
dt$Date <- as.Date(dt$Date)
head(dt)
head(dt$Date)
?as.Date
dt$Date <- as.Date(dt$Date, "%d/%m/%y")
head(dt$Date)
dt$Date <- as.Date(dt$Date, "%d/%m/%Y")
head(dt$Date)
dt <- fread("household_power_consumption.txt", sep = ";")
dt$Date <- as.Date(dt$Date, "%d/%m/%Y")
head(dt$Date)
sub <- dt[Date == "2007-02-01" | Date == "2007-02-02"]
rm(dt)
head(sub)
class(sub$Time)
class(sub$Date)
?strptime
strptime(sub$Time[1])
strptime(sub$Time[1], format = "%H:%M:%S")
strptime(sub$Time[1], format = "%H:%M:%S", usetz = FALSE)
strptime(sub$Time[1], format = "%H:%M:%S", tz = "")
strftime(sub$Time[1], format = "%H:%M:%S",usetz = FALSE)
strftime(sub$Time[1], format = "%H:%M:%S")
strptime(sub$Time[1], format = "%H:%M:%S")
## convert the Time column from string to time
sub$Time <- strptime(sub$Time, format = "%H:%M:%S")
head(sub$Time)
head(sub)
## read in the large data table from text file
dt <- fread("household_power_consumption.txt", sep = ";")
## Y has to be capital to have four digit years
dt$Date <- as.Date(dt$Date, "%d/%m/%Y")
sub <- dt[Date == "2007-02-01" | Date == "2007-02-02"]
rm(dt); ## remove the big data table
?sapply
test <- head(sub)
sapply(test$Time, strptime, format ="%H:%M:%S")
test2 <- sapply(test$Time, strptime, format ="%H:%M:%S")
strptime(test$Time, format = "%H:%M:%S")
?strptime
mutate(test, paste(test$Date, test$Time))
?mutate
mutate(test, date_time = paste(test$Date, test$Time))
?strptime
strptime(test$date_time)
strptime(test$date_time, format = "")
strptime(test$date_time, format = ""%Y-%m-%d %H:%M:%S"")
class(test$date_time)
strptime(test$date_time, format = "%Y-%m-%d %H:%M:%S")
as.chatacter(test$date_time)
as.character(test$date_time)
head(test)
test <- mutate(test, date_time = paste(Date, Time))
head(test)
class(test$date_time)
strptime(test$date_time, format = "%Y-%m-%d %H:%M:%S")
## convert the Time column from string to time
sub <- mutate(sub, time_date = strptime(paste(Time, Date), format = "%Y-%m-%d %H:%M:%S"))
head(sub)
## convert the Time column from string to time
sub <- mutate(sub, time_date = paste(Time, Date))
head(sub)
strptime(sub$date_time, format = "%Y-%m-%d %H:%M:%S")
head(sub)
strptime(sub$time_date, format = "%Y-%m-%d %H:%M:%S")
sub$time_date <- strptime(sub$time_date, format = "%Y-%m-%d %H:%M:%S")
head(sub)
sub <- select(sub, -time_date)
head(sub)
## convert the Time column from string to time
sub <- mutate(sub, time_date = paste(Time, Date))
head(sub)
sub$time_date[1]
class(sub$time_date[1])
strptime(sub$time_date[1], format = "%Y-%m-%d %H:%M:%S")
strptime(sub$time_date[1], format = "%H:%M:%S %Y-%m-%d")
sub$time_date[2]
?lubridate
ymd_hms(sub$time_date[2])
sub <- select(sub, -time_date)
## convert the Time column from string to time
sub <- mutate(sub, date_time = paste(Date, Time))
head(sub)
ymd_hms(sub$date_time[2])
sub$time_date <- ymd_hms(sub$date_time)
head(sub)
date_time[1]
sub$date_time[1]
sub <- select(sub, -time_date)
head(sub)
## make histogram of Global Active Power
hist(sub$Global_active_power)
class(sub$Global_active_power)
## make histogram of Global Active Power
hist(as.numeric(sub$Global_active_power))
par(mfrow = (1,1))
par(mfrow = c(1,1))
## make histogram of Global Active Power
hist(as.numeric(sub$Global_active_power))
title(main = "Global Active Power")
## make histogram of Global Active Power
hist(as.numeric(sub$Global_active_power),
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red")
title(main = "Global Active Power")
?hist
## make histogram of Global Active Power
hist(as.numeric(sub$Global_active_power),
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
breaks = 12)
## make histogram of Global Active Power
hist(as.numeric(sub$Global_active_power),
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
main = "Global Active Power",
col = "red",
breaks = 12)
?lubridate
?weekdays
weekdays(sub$date_time[1])
class(sub$date_time)
sub$time_date <- ymd_hms(sub$date_time)
class(sub$date_time)
class(as.Date(sub$date_time))
weekdays(as.Date(sub$date_time[1]))
sub$time_date <- as.Date(ymd_hms(sub$date_time))
head(sub)
sub <- select(sub, -time_date)
head(sub)
sub$date_time <- ymd_hms(sub$date_time)
class(sub$date_time)
class(sub$date_time[1])
## Plot 2:
## Make line graph of global active power thursday through saturday
plot(sub$date_time, sub$Global_active_power)
## Plot 2:
## Make line graph of global active power thursday through saturday
plot(sub$date_time, sub$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
)
?plot
## Plot 2:
## Make line graph of global active power thursday through saturday
plot(sub$date_time, sub$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
type = "l")
names(sub)
## Plot 3:
## plot energy submeterings
plot(sub$date_time, sub$Sub_metering_1,
xlab = "",
ylab = "Energy Sub-Metering",
type = "l")
## Plot 3:
## plot energy submeterings
plot(sub$date_time, sub$Sub_metering_1, sub$Sub_metering_2,
xlab = "",
ylab = "Energy Sub-Metering",
type = "l")
?plot
## Plot 3:
## plot energy submeterings
plot(sub$date_time, c(sub$Sub_metering_1, sub$Sub_metering_2),
xlab = "",
ylab = "Energy Sub-Metering",
type = "l")
?lines
## Plot 3:
## plot energy submeterings
plot(0,0,
xlab = "",
ylab = "Energy Sub-Metering",
type = "l")
lines(sub$date_time, sub$Sub_metering_1)
?lines
lines(sub$date_time, sub$Sub_metering_1, type = "l")
lines(sub$date_time, sub$Sub_metering_1, type = "l", col = "black")
## Plot 3:
## plot energy submeterings
plot(0,0,
xlab = "",
ylab = "Energy Sub-Metering",
type = "l")
lines(sub$date_time, sub$Sub_metering_1, type = "l", col = "black")
## Plot 3:
## plot energy submeterings
plot(1, type = "n"
xlab = "",
ylab = "Energy Sub-Metering")
lines(sub$date_time, sub$Sub_metering_1, type = "l", col = "black")
## Plot 3:
## plot energy submeterings
plot(sub$date_time, sub$Sub_metering_1,
type = "l"
xlab = "",
ylab = "Energy Sub-Metering")
## Plot 3:
## plot energy submeterings
plot(sub$date_time, sub$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy Sub-Metering")
lines(sub$date_time, sub$Sub_metering_2, type = "l", col = "red")
lines(sub$date_time, sub$Sub_metering_3, type = "l", col = "blue")
# add the legend
legend("topright", legend = c("sub-metering-1",
"sub-metering-2",
"sub-metering-3"),
col = plotcol, lwd = 1)
# add the legend
legend("topright", legend = c("sub-metering-1",
"sub-metering-2",
"sub-metering-3"),
col = c("black", "red", "blue"), lwd = 1)
## Plot 4:
## Plot global active power, Voltage, submetering, and global reactive power
par(mfrow = c(2,2))
names(sub)
# SUBPLOT 1
plot(sub$date_time, sub$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
type = "l",
col = "black")
# SUBPLOT 2
plot(sub$date_time, sub$Voltage,
xlab = "",
ylab = "Voltage (V)",
type = "l",
col = "black")
# SUBPLOT 3
plot(sub$date_time, sub$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy Sub-Metering",
col = "black")
lines(sub$date_time, sub$Sub_metering_2, type = "l", col = "red")
lines(sub$date_time, sub$Sub_metering_3, type = "l", col = "blue")
# add the legend
legend("topright", legend = c("sub-metering-1",
"sub-metering-2",
"sub-metering-3"),
col = c("black", "red", "blue"), lwd = 1)
# SUBPLOT 4
plot(sub$date_time, sub$Global_reactive_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
type = "l",
col = "black")
?margin
?mar
?parallel
?par
## Plot 4:
## Plot global active power, Voltage, submetering, and global reactive power
par(mfrow = c(2,2), mar = c(5,5,5,3))
# SUBPLOT 1
plot(sub$date_time, sub$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
type = "l",
col = "black")
# SUBPLOT 2
plot(sub$date_time, sub$Voltage,
xlab = "",
ylab = "Voltage (V)",
type = "l",
col = "black")
# SUBPLOT 3
plot(sub$date_time, sub$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy Sub-Metering",
col = "black")
# add lines for other sub-meterings
lines(sub$date_time, sub$Sub_metering_2, type = "l", col = "red")
lines(sub$date_time, sub$Sub_metering_3, type = "l", col = "blue")
# add the legend
legend("topright", legend = c("sub-metering-1",
"sub-metering-2",
"sub-metering-3"),
col = c("black", "red", "blue"), lwd = 1)
# SUBPLOT 4
plot(sub$date_time, sub$Global_reactive_power,
xlab = "",
ylab = "Global Reactive Power (kilowatts)",
type = "l",
col = "black")
par(mfrow = c(2,2), mar = c(5,5,3,3))
# SUBPLOT 1
plot(sub$date_time, sub$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
type = "l",
col = "black")
# SUBPLOT 2
plot(sub$date_time, sub$Voltage,
xlab = "",
ylab = "Voltage (V)",
type = "l",
col = "black")
# SUBPLOT 3
plot(sub$date_time, sub$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy Sub-Metering",
col = "black")
# add lines for other sub-meterings
lines(sub$date_time, sub$Sub_metering_2, type = "l", col = "red")
lines(sub$date_time, sub$Sub_metering_3, type = "l", col = "blue")
# add the legend
legend("topright", legend = c("sub-metering-1",
"sub-metering-2",
"sub-metering-3"),
col = c("black", "red", "blue"), lwd = 1)
# SUBPLOT 4
plot(sub$date_time, sub$Global_reactive_power,
xlab = "",
ylab = "Global Reactive Power (kilowatts)",
type = "l",
col = "black")
par(mfrow = c(2,2), mar = c(5,5,2,3))
# SUBPLOT 1
plot(sub$date_time, sub$Global_active_power,
xlab = "",
ylab = "Global Active Power (kilowatts)",
type = "l",
col = "black")
# SUBPLOT 2
plot(sub$date_time, sub$Voltage,
xlab = "",
ylab = "Voltage (V)",
type = "l",
col = "black")
# SUBPLOT 3
plot(sub$date_time, sub$Sub_metering_1,
type = "l",
xlab = "",
ylab = "Energy Sub-Metering",
col = "black")
# add lines for other sub-meterings
lines(sub$date_time, sub$Sub_metering_2, type = "l", col = "red")
lines(sub$date_time, sub$Sub_metering_3, type = "l", col = "blue")
# add the legend
legend("topright", legend = c("sub-metering-1",
"sub-metering-2",
"sub-metering-3"),
col = c("black", "red", "blue"), lwd = 1)
# SUBPLOT 4
plot(sub$date_time, sub$Global_reactive_power,
xlab = "",
ylab = "Global Reactive Power (kilowatts)",
type = "l",
col = "black")
rm(list = ls())
?`vect
?vect
?vector
1:5
n = 1:30
tot <- 2^n
tar <- tot - 2*n
plot(n, tot, type = "l", col = "black")
par(mfrow = c(2,2))
plot(n, tot, type = "l", col = "black")
par(mfrow = c(1,1))
plot(n, tot, type = "l", col = "black")
plot(n, tot, type = "l", col = "black")
lines(n, tar, type = "l", col = "red")
## plot on linear scale
par(mfrow = c(2,1))
plot(n, tot, type = "l", col = "black")
lines(n, tar, type = "l", col = "red")
## plot on linear scale
par(mfrow = c(2,1))
plot(n, tot, type = "l", col = "black")
lines(n, tar, type = "l", col = "red")
## plot on semi-log scale
plot(n, tot, type = "l", col = "black",
ylab = "Number of copies",
xlab = "Number of cycles", log = "y")
lines(n, tar, type = "l", col = "red", log = "y")
## plot on linear scale
par(mfrow = c(2,1))
par(mfrow = c(2,1))
plot(n, tot, type = "l", col = "black",
ylab = "Number of copies",
xlab = "Number of cycles")
lines(n, tar, type = "l", col = "red")
## plot on semi-log scale
plot(n, tot, type = "l", col = "black",
ylab = "log(Number of copies)",
xlab = "Number of cycles", log = "y")
lines(n, tar, type = "l", col = "red", log = "y")
par(mfrow = c(1,2))
plot(n, tot, type = "l", col = "black",
ylab = "Number of copies",
xlab = "Number of cycles")
lines(n, tar, type = "l", col = "red")
## plot on semi-log scale
plot(n, tot, type = "l", col = "black",
ylab = "log(Number of copies)",
xlab = "Number of cycles", log = "y")
lines(n, tar, type = "l", col = "red", log = "y")
quit()
